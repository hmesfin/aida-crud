[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aida-crud"
version = "1.0.1"
description = "Advanced Intelligent Django API CRUD Framework"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Gojjo Tech", email = "admin@gojjotech.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "Django>=3.2",
    "djangorestframework>=3.12",
    "django-filter>=2.4",
    "openpyxl>=3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-django>=4.5",
    "pytest-cov>=4.1",
    "pytest-xdist>=3.3",
    "pytest-mock>=3.11",
    "factory-boy>=3.3",
    "faker>=19.0",
    "ruff>=0.1.0",
    "black>=23.0",
    "isort>=5.12",
    "mypy>=1.5",
    "django-stubs>=4.2",
    "djangorestframework-stubs>=3.14",
]

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "RUF", # Ruff-specific rules
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D106", # Missing docstring in public nested class
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D400", # Ignore punctuation errors.
    "RUF012", # Ignore ClassVar
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "venv",
    ".venv",
    "*.egg-info",
    ".pytest_cache",
    ".mypy_cache",
    "migrations",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["D", "T20"]
"setup.py" = ["D"]

[tool.ruff.isort]
known-first-party = ["aida_crud"]
known-third-party = ["django", "rest_framework", "django_filters"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_django = ["django", "rest_framework", "django_filters"]
known_first_party = ["aida_crud"]
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["*/migrations/*", "venv/*", ".venv/*"]

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.coverage.run]
source = ["aida_crud"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/setup.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false